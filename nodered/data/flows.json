[
    {
        "id": "2f58fda264849b1c",
        "type": "tab",
        "label": "Fluxo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a0b2e9d582d37de1",
        "type": "mongodb4-client",
        "name": "ConecttionMongoDB",
        "protocol": "mongodb",
        "hostname": "mongo",
        "port": "27017",
        "dbName": "iot-mongo",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "183ab79de93076de",
        "type": "mqtt-broker",
        "name": "mosquitto",
        "broker": "mosquitto",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "84cf269ca5a203f6",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "postgres",
        "hostFieldType": "str",
        "port": "5435",
        "portFieldType": "num",
        "database": "iot",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": 10,
        "maxFieldType": "num",
        "idle": 1000,
        "idleFieldType": "num",
        "connectionTimeout": 10000,
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "admin",
        "passwordFieldType": "str"
    },
    {
        "id": "c7ad8d6dae49d534",
        "type": "mqtt in",
        "z": "2f58fda264849b1c",
        "name": "",
        "topic": "device/+/info",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "183ab79de93076de",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "c2130da44fff2de7"
            ]
        ]
    },
    {
        "id": "232a6c85c66ccdb4",
        "type": "mongodb4",
        "z": "2f58fda264849b1c",
        "clientNode": "a0b2e9d582d37de1",
        "mode": "collection",
        "collection": "",
        "operation": "",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "devices",
        "x": 780,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c2130da44fff2de7",
        "type": "uuid",
        "z": "2f58fda264849b1c",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "",
        "field": "payload._id",
        "fieldType": "msg",
        "x": 390,
        "y": 100,
        "wires": [
            [
                "4000212370bbf0f1"
            ]
        ]
    },
    {
        "id": "4000212370bbf0f1",
        "type": "function",
        "z": "2f58fda264849b1c",
        "name": "infoDevice",
        "func": "msg.collection = \"devices\";\nmsg.operation = \"updateOne\";\n\nconst update = {\n    $set: {\n        device_id: msg.payload.device_id,\n        light: msg.payload.light,\n        humidity: msg.payload.humidity,\n        update_at: new Date(),\n        created_at: new Date()\n    },\n    $setOnInsert: { _id: msg.payload._id }\n}\n\nmsg.payload = [{ device_id: msg.payload.device_id }, update, { upsert: true }];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 100,
        "wires": [
            [
                "232a6c85c66ccdb4"
            ]
        ]
    },
    {
        "id": "dd028a2863ae27ce",
        "type": "debug",
        "z": "2f58fda264849b1c",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 380,
        "wires": []
    },
    {
        "id": "8974d458eabb543d",
        "type": "mqtt in",
        "z": "2f58fda264849b1c",
        "name": "",
        "topic": "device/+/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "183ab79de93076de",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "403f79affa0a8f0f"
            ]
        ]
    },
    {
        "id": "d18c15afe8074504",
        "type": "function",
        "z": "2f58fda264849b1c",
        "name": "function 1",
        "func": "var objeto = {};\n\nobjeto.query = `INSERT INTO readings (id, Device_id, humidity, unit, created_at) VALUES ($1, $2, $3, $4, $5)`;\nobjeto.params = [\n    msg.payload._id,\n    msg.payload.device_id,\n    msg.payload.humidity,\n    msg.payload.unit,\n    msg.payload.created_at = new Date()\n]\nmsg = {};\nmsg = objeto;\n\n\nif (msg.payload.humidity < 40 ) {\n    msg.collection = \"irrigation_alerts\";\n    msg.operation = \"updateOne\";\n\nconst content = {\n    device_id: msg.payload.device_id,\n    humidity: msg.payload.humidity,\n    update_at: new Date(),\n    created_at: new Date()\n}   \n    msg.payload = content;\n}\n\nconst hora = new Date();\n\n\n\nreturn msg, [msg, content];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 280,
        "wires": [
            [
                "fbb2470f969c97b5"
            ],
            [
                "208444156fe9f960"
            ]
        ]
    },
    {
        "id": "403f79affa0a8f0f",
        "type": "uuid",
        "z": "2f58fda264849b1c",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "",
        "field": "payload._id",
        "fieldType": "msg",
        "x": 350,
        "y": 280,
        "wires": [
            [
                "d18c15afe8074504"
            ]
        ]
    },
    {
        "id": "fbb2470f969c97b5",
        "type": "postgresql",
        "z": "2f58fda264849b1c",
        "name": "",
        "query": "SELECT * FROM ;",
        "postgreSQLConfig": "84cf269ca5a203f6",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 770,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "208444156fe9f960",
        "type": "mongodb4",
        "z": "2f58fda264849b1c",
        "clientNode": "a0b2e9d582d37de1",
        "mode": "collection",
        "collection": "",
        "operation": "",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "devices",
        "x": 780,
        "y": 320,
        "wires": [
            []
        ]
    }
]